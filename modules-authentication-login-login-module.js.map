{"version":3,"sources":["./src/app/modules/authentication/forgot-password/forgot-password.component.ts","./src/app/modules/authentication/forgot-password/forgot-password.component.html","./src/app/modules/authentication/login/login.module.ts","./src/app/modules/authentication/login/login.component.ts","./src/app/modules/authentication/login/login.component.html"],"names":[],"mappings":"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","file":"modules-authentication-login-login-module.js","sourcesContent":["import { AfterViewInit, Component, ElementRef, OnInit, ViewChildren } from '@angular/core';\r\nimport { FormBuilder, FormControlName, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\nimport { GenericValidator } from '../../../shred/validations/generic-validators';\r\nimport { Regex } from '../../../shred/validations/regex';\r\n\r\n@Component({\r\n    templateUrl: './forgot-password.component.html',\r\n    styleUrls: ['./forgot-password.scss']\r\n})\r\nexport class ForgotPasswordComponent implements OnInit, AfterViewInit {\r\n\r\n    forgotPasswordForm: FormGroup;\r\n\r\n    genericValidator: GenericValidator;\r\n    displayMessage: any = {};\r\n    @ViewChildren(FormControlName, { read: ElementRef })\r\n    private formInputElements: ElementRef[];\r\n\r\n    constructor(\r\n        private fb: FormBuilder,\r\n        private snackbar: MatSnackBar,\r\n        private dialogRef:MatDialogRef<ForgotPasswordComponent>\r\n    ) { \r\n        this.genericValidator = new GenericValidator({\r\n            'email': {\r\n                'required': 'This field is required.',\r\n                'pattern': 'Please enter valid email address'\r\n            }\r\n        })\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.initForm();\r\n    }\r\n\r\n    private initForm() {\r\n        this.forgotPasswordForm = this.fb.group({\r\n            id: 0,\r\n            email: [null, [Validators.required, Validators.pattern(Regex.emailRegex)]]\r\n        })\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.validation();\r\n    }\r\n\r\n    private validation() {\r\n        this.genericValidator\r\n            .initValidationProcess(this.forgotPasswordForm, this.formInputElements)\r\n            .subscribe({ next: m => this.displayMessage = m });\r\n    }\r\n\r\n    sumbit() {\r\n        setTimeout(() => {\r\n            this.dialogRef.close();\r\n            this.snackbar.open('Please check your email.','Close', {\r\n                duration: 1000,\r\n                        horizontalPosition: 'right',\r\n                        verticalPosition: 'top',\r\n            });\r\n        }, 1500)\r\n        \r\n\r\n    }\r\n\r\n    cancel() {\r\n        this.dialogRef.close();\r\n    }\r\n}\r\n","<div class=\"row p-3\">\r\n    <div class=\"col-md-12 text-center\">\r\n        <h3> Forgot Your Password?</h3>\r\n        <p style=\"font-size: 13px;\">Don't worry! Just fill in your email and we will send you a link to reset your password.</p>\r\n\r\n        <form class=\"pt-4\" [formGroup]=\"forgotPasswordForm\" (ngSubmit)=\"sumbit()\" autocomplete=\"off\">\r\n            <mat-form-field style=\"width: 90%;\" class=\"login_field pb-3\">\r\n                <mat-label class=\"input_label\">Email</mat-label>\r\n                <input formControlName=\"email\" type=\"email\" matInput placeholder=\"Enter your email\">\r\n                <mat-error class=\"font-danger\" *ngIf=\"displayMessage?.email\">{{displayMessage?.email}}</mat-error>\r\n            </mat-form-field>\r\n\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                    <button [disabled]=\"forgotPasswordForm.invalid\" class=\"btn btn-primary\" type=\"submit\">Submit</button>\r\n                    <button class=\"btn btn-danger ml-3\" type=\"button\" (click)=\"cancel()\">Cancel</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\n\r\nimport { LoginComponent } from './login.component';\r\nimport { ForgotPasswordComponent } from '../forgot-password/forgot-password.component';\r\n// import { AuthService } from '../auth.service';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        LoginComponent,\r\n        ForgotPasswordComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n\r\n\r\n        RouterModule.forChild([\r\n            { path: '', component: LoginComponent }\r\n        ]),\r\n\r\n        MatCardModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        MatFormFieldModule,\r\n        MatInputModule,\r\n        MatDialogModule,\r\n        MatSnackBarModule,\r\n        MatCheckboxModule\r\n    ],\r\n    exports: [],\r\n    // providers: [AuthService],\r\n    entryComponents: [ForgotPasswordComponent]\r\n})\r\nexport class LoginModule { }","import { AfterViewInit, Component, ElementRef, OnInit, ViewChildren } from '@angular/core';\r\nimport { FormBuilder, FormControlName, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { map } from 'rxjs/operators';\r\nimport { MatSnackBar, MatSnackBarHorizontalPosition, MatSnackBarVerticalPosition } from '@angular/material/snack-bar';\r\n\r\nimport { GenericValidator } from '../../../shred/validations/generic-validators'\r\nimport { ForgotPasswordComponent } from '../forgot-password/forgot-password.component';\r\nimport { AuthService } from '../auth.service';\r\nimport { SnackbarComponent } from '../../../../../src/app/shred/validations/snackbar/snackbar.component';\r\nimport { AngularFireDatabase } from '@angular/fire/database';\r\n\r\n@Component({\r\n    templateUrl: './login.component.html',\r\n    styleUrls: ['./login.scss']\r\n})\r\nexport class LoginComponent implements OnInit, AfterViewInit {\r\n    horizontalPosition: MatSnackBarHorizontalPosition = 'right';\r\n    verticalPosition: MatSnackBarVerticalPosition = 'top';\r\n\r\n    isLoading: boolean = false;\r\n    loginForm: FormGroup;\r\n\r\n    users: any[] = [];\r\n\r\n    genericValidator: GenericValidator;\r\n    displayMessage: any = {};\r\n    @ViewChildren(FormControlName, { read: ElementRef })\r\n    private formInputElements: ElementRef[];\r\n\r\n    constructor(\r\n        private fb: FormBuilder,\r\n        private dialog: MatDialog,\r\n        private router: Router,\r\n        private snackbarService: MatSnackBar,\r\n        private authService: AuthService,\r\n        private db: AngularFireDatabase,\r\n    ) {\r\n        this.genericValidator = new GenericValidator({\r\n            'userName': {\r\n                'required': 'This field is required.'\r\n            },\r\n            'password': {\r\n                'required': 'This field is required.'\r\n            }\r\n        })\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.initForm();\r\n        this.getListOfUsers();\r\n    }\r\n\r\n    getListOfUsers() {\r\n        this.authService.getAllUsers().pipe(\r\n            map(changes => changes.map(c => ({key: c.payload.key, ...c.payload.val()})))\r\n          ).subscribe(_ => {\r\n            this.users = _;\r\n          })\r\n    }\r\n\r\n    private initForm() {\r\n        this.loginForm = this.fb.group({\r\n            id: 0,\r\n            userName: [null, Validators.required],\r\n            password: [null, Validators.required]\r\n        })\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.validation();\r\n    }\r\n\r\n    private validation() {\r\n        this.genericValidator\r\n            .initValidationProcess(this.loginForm, this.formInputElements)\r\n            .subscribe({ next: m => this.displayMessage = m });\r\n    }\r\n \r\n    saveChanges() {\r\n        this.isLoading = true;\r\n        let a = this.users.find(_ => _.content.email === this.loginForm.value.userName && _.content.password === this.loginForm.value.password);\r\n        if(a !== undefined) {\r\n            setTimeout(() => {\r\n                this.snackbarService.openFromComponent(SnackbarComponent, {\r\n                    data: 'User Login Successfully.',\r\n                    duration: 5000,\r\n                    verticalPosition: \"top\",\r\n                    horizontalPosition: \"right\"\r\n                })\r\n                this.authService.currentUser = true;\r\n                this.authService.logged = a.key;\r\n                localStorage.setItem(\"logged\", JSON.stringify(a));\r\n                \r\n                this.router.navigate(['home']);\r\n                window.location.reload();\r\n            },400)\r\n        } else {\r\n            setTimeout(() => {\r\n                this.snackbarService.openFromComponent(SnackbarComponent, {\r\n                    data: 'Login username or password incorrect.',\r\n                    duration: 5000,\r\n                    verticalPosition: \"top\",\r\n                    horizontalPosition: \"right\"\r\n                })\r\n            }, 400)\r\n        }\r\n    }\r\n\r\n    forgotPassword() {\r\n        const dialogRef = this.dialog.open(ForgotPasswordComponent, {\r\n            height: '330px',\r\n            width: '530px'\r\n        });\r\n\r\n    }\r\n\r\n    signUp() {\r\n        setTimeout(() => {\r\n            this.router.navigate(['/register']);\r\n        }, 400)\r\n    }\r\n\r\n}\r\n","<header id=\"home\" class=\"login_page pb-4\">\r\n    <div class=\"row m_o\">\r\n        <div class=\"col-md-4\"></div>\r\n        <div class=\"col-md-4\">\r\n            <mat-card class=\"login_card\">\r\n                <div class=\"text-center\">\r\n                    <!-- <div class=\"row\">\r\n                        <div class=\"col-md-3\"></div>\r\n                        <div class=\"col-md-6\">\r\n                            <div class=\"img\">\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md-3\"></div>\r\n                    </div> -->\r\n\r\n                    <img class=\"login_img\" src=\"assets/logo/e-logo.png\">\r\n                </div>\r\n\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-12 text-center login_form\">\r\n                        <form [formGroup]=\"loginForm\" (ngSubmit)=\"saveChanges()\" class=\"example-form\" autocomplete=\"off\">\r\n                            <mat-form-field class=\"login_field\">\r\n                                <mat-label class=\"input_label\">Username</mat-label>\r\n                                <input formControlName=\"userName\" type=\"email\" matInput placeholder=\"Enter username\">\r\n                                <mat-error class=\"font-danger\" *ngIf=\"displayMessage?.userName\">{{displayMessage?.userName}}</mat-error>\r\n                            </mat-form-field>\r\n\r\n                            <mat-form-field class=\"login_field\">\r\n                                <mat-label class=\"input_label\">Password</mat-label>\r\n                                <input formControlName=\"password\" type=\"password\" matInput placeholder=\"Enter Your Password\">\r\n                                <mat-error class=\"font-danger\" *ngIf=\"displayMessage?.password\">{{displayMessage?.password}}</mat-error>\r\n                            </mat-form-field>\r\n\r\n                            <div class=\"row pt-3\">\r\n                                <div class=\"col-md-6 text-left pl-4\">\r\n                                    <mat-checkbox class=\"m_checkbox\"> Remember me</mat-checkbox>\r\n                                </div>\r\n                                <div class=\"col-md-6 text-left login_card_footer\">\r\n                                    <a class=\"forgot_password\" href=\"Javascript:;\" (click)=\"forgotPassword()\"> Forgot password ?</a>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md 12 text-center pt-3\">\r\n                                    <button [disabled]=\"loginForm.invalid || isLoading\" class=\"login_btn login_btn-5\">\r\n                                        <span *ngIf=\"!isLoading\">LOGIN</span>   \r\n                                        <!-- <span *ngIf=\"isLoading\"><i style=\"font-size: 22px;\" class=\"fa fa-cog fa-spin\"></i></span> -->\r\n                                          <!-- spinner -->\r\n                                            <div *ngIf=\"isLoading\" class=\"spinner\">\r\n                                                <div></div>\r\n                                                <div></div>\r\n                                            </div>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"col-md-12 text-center pt-4\">\r\n                    <p class=\"f_text\">Don't have an account? <a id=\"reg\" (click)=\"signUp()\" href=\"Javascript:;\">Register</a></p>\r\n                </div>\r\n            </mat-card>\r\n        </div>\r\n        <div class=\"col-md-4\"></div>\r\n    </div>\r\n</header>"],"sourceRoot":"webpack:///"}