{"version":3,"sources":["./src/app/modules/authentication/sign-up/sign-up.module.ts","./src/app/modules/authentication/sign-up/sign-up.component.ts","./src/app/modules/authentication/sign-up/sign-up.component.html"],"names":[],"mappings":"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","file":"modules-authentication-sign-up-sign-up-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\n\r\nimport { SignUpComponent } from './sign-up.component';\r\n// import { AuthService } from '../auth.service';\r\n\r\n@NgModule({\r\n    declarations: [SignUpComponent],\r\n    imports: [\r\n        CommonModule,\r\n        RouterModule.forChild([\r\n            { path: '', component: SignUpComponent }\r\n        ]),\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        MatInputModule,\r\n        MatFormFieldModule,\r\n        MatCardModule,\r\n        MatCheckboxModule,\r\n        MatSnackBarModule\r\n    ],\r\n    exports: [],\r\n    // providers: [AuthService],\r\n})\r\nexport class SignUpModule { }","import { AfterViewInit, Component, ElementRef, OnInit, ViewChildren } from '@angular/core';\r\nimport { AbstractControl, FormBuilder, FormControlName, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { MatSnackBar, MatSnackBarHorizontalPosition, MatSnackBarVerticalPosition } from '@angular/material/snack-bar';\r\n\r\nimport { GenericValidator } from '../../../shred/validations/generic-validators';\r\nimport { Regex } from '../../../shred/validations/regex';\r\nimport { AuthService } from '../auth.service';\r\nimport { SnackbarComponent } from 'src/app/shred/validations/snackbar/snackbar.component';\r\nimport { delay, map } from 'rxjs/operators';\r\n\r\n@Component({\r\n    templateUrl: './sign-up.component.html',\r\n    styleUrls: ['./sign-up.scss']\r\n})\r\nexport class SignUpComponent implements OnInit, AfterViewInit {\r\n\r\n    signupForm: FormGroup;\r\n    isLoading: boolean = false;\r\n\r\n    users: any[] = [];\r\n\r\n    genericValidator: GenericValidator;\r\n    displayMessage: any = {};\r\n    @ViewChildren(FormControlName, { read: ElementRef })\r\n    private formInputElements: ElementRef[];\r\n\r\n    constructor(\r\n        private fb: FormBuilder,\r\n        private router: Router,\r\n        private snackbarService: MatSnackBar,\r\n        private authService: AuthService\r\n    ) {\r\n        this.genericValidator = new GenericValidator({\r\n            'email': {\r\n                'required': 'This field is required.',\r\n                'pattern': 'Please enter valid email address.'\r\n            },\r\n            'password': {\r\n                'required': 'This field is required.'\r\n            },\r\n            'confirmPassword': {\r\n                'required': 'This field is required.'\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.initForm();\r\n\r\n        this.getListOfUsers();\r\n    }\r\n\r\n    getListOfUsers() {\r\n        this.authService.getAllUsers().pipe(\r\n            map(changes => changes.map(c => ({ key: c.payload.key, ...c.payload.val() })))\r\n        ).subscribe(_ => {\r\n            this.users = _;\r\n        })\r\n    }\r\n\r\n    private initForm() {\r\n        this.signupForm = this.fb.group({\r\n            id: 0,\r\n            email: [null, [Validators.required, Validators.pattern(Regex.emailRegex)]],\r\n            role: 'user',\r\n            password: [null, Validators.required],\r\n            confirmPassword: [null, Validators.required]\r\n        }, { validator: this.passwordConfirming })\r\n    }\r\n\r\n    private validation() {\r\n        this.genericValidator\r\n            .initValidationProcess(this.signupForm, this.formInputElements)\r\n            .subscribe({ next: m => this.displayMessage = m });\r\n    }\r\n\r\n    passwordConfirming(c: AbstractControl): { invalid: boolean } {\r\n        if (c.get('password').value !== c.get('confirmPassword').value) {\r\n            return { invalid: true };\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.validation();\r\n    }\r\n\r\n    saveChanges() {\r\n        this.isLoading = true;\r\n        let a = this.users.find(_ => _.content.email === this.signupForm.value.email);\r\n        if (a === undefined) {\r\n            this.authService.addUser(this.signupForm.value).pipe(delay(400)).subscribe(_ => {\r\n                this.router.navigate(['/home']);\r\n                this.snackbarService.openFromComponent(SnackbarComponent, {\r\n                    data: 'User registered successfully.',\r\n                    duration: 5000,\r\n                    verticalPosition: 'top',\r\n                    horizontalPosition: 'right'\r\n                })\r\n                this.isLoading = false;\r\n                this.router.navigate(['/login']);\r\n            })\r\n        } else {\r\n            this.snackbarService.openFromComponent(SnackbarComponent, {\r\n                data: 'User already registered.',\r\n                duration: 5000,\r\n                verticalPosition: 'top',\r\n                horizontalPosition: 'right'\r\n            })\r\n            this.isLoading = false;\r\n        }\r\n    }\r\n\r\n    login() {\r\n        setTimeout(() => {\r\n            this.router.navigate(['/login']);\r\n        }, 400)\r\n    }\r\n}\r\n","<header id=\"home\" class=\"signup_page pb-4\">\r\n    <div class=\"row m_0\">\r\n        <div class=\"col-md-4\"></div>\r\n        <div class=\"col-md-4\">\r\n            <mat-card class=\"signup_card\">\r\n                <div class=\"text-center\">\r\n                    <img class=\"login_img\" src=\"assets/logo/e-logo.png\">\r\n                </div>\r\n\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-12 text-center signup_form\">\r\n                        <form [formGroup]=\"signupForm\" (ngSubmit)=\"saveChanges()\" autocomplete=\"off\">\r\n                            <mat-form-field class=\"max-width\">\r\n                                <mat-label class=\"input_label\">Email</mat-label>\r\n                                <input formControlName=\"email\" type=\"email\" matInput placeholder=\"Enter username\">\r\n                                <mat-error class=\"font-danger\" *ngIf=\"displayMessage?.email\">{{displayMessage?.email}}</mat-error>\r\n                            </mat-form-field>\r\n\r\n                            <mat-form-field class=\"max-width pt-3\">\r\n                                <mat-label class=\"input_label\">Password</mat-label>\r\n                                <input formControlName=\"password\" type=\"password\" matInput placeholder=\"Enter Your Password\">\r\n                                <mat-error class=\"font-danger\" *ngIf=\"displayMessage?.password\">{{displayMessage?.password}}</mat-error>\r\n                            </mat-form-field>\r\n\r\n                            <mat-form-field class=\"max-width pt-3\">\r\n                                <mat-label class=\"input_label\">Confirm Password</mat-label>\r\n                                <input formControlName=\"confirmPassword\" type=\"password\" matInput placeholder=\"Re-enter your password\">\r\n                                <mat-error class=\"font-danger\" *ngIf=\"displayMessage?.confirmPassword\">{{displayMessage?.confirmPassword}}</mat-error>\r\n                            </mat-form-field>\r\n                            <p class=\"wrong_password\" *ngIf=\"signupForm.errors?.invalid\"> Password doesn't match </p>\r\n\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md 12 text-center pt-3\">\r\n                                    <button [disabled]=\"signupForm.invalid || isLoading\" class=\"signup_btn signup_btn-5\">\r\n                                        <span *ngIf=\"!isLoading\">REGISTER</span>   \r\n                                        <!-- <span *ngIf=\"isLoading\"><i style=\"font-size: 22px;\" class=\"fa fa-cog fa-spin\"></i></span> -->\r\n                                        <div *ngIf=\"isLoading\" class=\"spinner\">\r\n                                            <div></div>\r\n                                            <div></div>\r\n                                        </div>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-12 text-center pt-4\">\r\n                    <p class=\"already\">Already have an account? <a class=\"s_login\" (click)=\"login()\" href=\"Javascript:;\">Login</a></p>\r\n                </div>\r\n            </mat-card>\r\n        </div>\r\n        <div class=\"col-md-4\"></div>\r\n    </div>\r\n</header>"],"sourceRoot":"webpack:///"}