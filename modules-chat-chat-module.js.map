{"version":3,"sources":["./src/app/modules/chat/chat.module.ts","./src/app/modules/chat/chat.service.ts","./src/app/modules/chat/chat.component.ts","./src/app/modules/chat/chat.component.html"],"names":[],"mappings":"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","file":"modules-chat-chat-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { ChatComponent } from './chat.component';\r\nimport { ChatService } from './chat.service';\r\n\r\n@NgModule({\r\n    declarations: [ChatComponent],\r\n    imports: [ \r\n        CommonModule,\r\n        RouterModule.forChild([\r\n            {path: '', component: ChatComponent}\r\n        ]),\r\n        FormsModule, ReactiveFormsModule\r\n     ],\r\n    exports: [],\r\n    providers: [ChatService],\r\n})\r\nexport class ChatModule {}","import { Injectable } from '@angular/core';\r\nimport { AngularFireDatabase, AngularFireList } from '@angular/fire/database';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ChatService {\r\n\r\n    chats: AngularFireList<any>;\r\n\r\n    constructor(\r\n        private db: AngularFireDatabase\r\n    ) {}\r\n\r\n    sendMessage(body): Observable<any> {\r\n        let rand = Math.floor(Math.random() * (9999 - 1111 + 1)) + 100;\r\n        body.id = rand;\r\n        body.sn = rand;\r\n        this.db.list('liveChat').push({ content: body });\r\n        return of(body)\r\n    }\r\n\r\n    getAllMessages() {\r\n        this.chats = this.db.list('liveChat');\r\n        return this.chats.snapshotChanges();\r\n    }\r\n\r\n}","import {AfterContentInit, Component, DoCheck, OnChanges, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { map } from 'rxjs/operators';\r\nimport { ChatService } from './chat.service';\r\n\r\n@Component({\r\n    templateUrl: './chat.component.html',\r\n    styleUrls: ['./chat.scss']\r\n})\r\nexport class ChatComponent implements OnInit, DoCheck {\r\n\r\n    chatForm: FormGroup;\r\n    loggedUser = JSON.parse(localStorage.getItem('logged'));\r\n\r\n    chats: any[] = [];\r\n\r\n    individualChat: any[] = [];\r\n    another: any[] =[];\r\n\r\n    constructor(\r\n        private fb: FormBuilder,\r\n        private chatService: ChatService\r\n    ) {\r\n\r\n\r\n\r\n        this.initForm();\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n\r\n\r\n     }\r\n\r\n     ngDoCheck() {\r\n        this.chatService.getAllMessages().pipe(\r\n            map(changes => changes.map(c => ({ key: c.payload.key, ...c.payload.val() })))\r\n          ).subscribe(_ => {\r\n            this.chats = _;\r\n\r\n\r\n            let a =this.chats.filter(_ => _.content.name === this.loggedUser.content.email );\r\n            this.individualChat = a;\r\n    \r\n            let b = this.chats.filter(_ => _.content.name !== this.loggedUser.content.email);\r\n            this.another = b;\r\n          })\r\n     }\r\n\r\n    private initForm() {\r\n        this.chatForm = this.fb.group({\r\n            id: 0,\r\n            message: null,\r\n            currentTime: Date.now(),\r\n            name: this.loggedUser.content.email,\r\n\r\n        })\r\n    }\r\n\r\n    saveChanges() {\r\n        console.log(this.chatForm.value);\r\n        this.chatService.sendMessage(this.chatForm.value).subscribe(_ => {\r\n            console.log('Message sent!!!');\r\n        });\r\n\r\n        this.chatForm.setValue({\r\n            id: null,\r\n            message: null,\r\n            currentTime: null,\r\n            name: null\r\n        })\r\n    }\r\n    \r\n}\r\n","<div style=\"height: 100vh;background: url(https://image.freepik.com/free-photo/shiny-lights_385-19321244.jpg); background-repeat: no-repeat; background-size: cover; padding-top: 100px;\r\n\">\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n                <section class=\"msger\">\r\n                    <header class=\"msger-header\">\r\n                        <div class=\"msger-header-title\">\r\n                            <i class=\"fas fa-comment-alt\"></i> SimpleChat\r\n                        </div>\r\n                        <div class=\"msger-header-options\">\r\n                            <span><i class=\"fas fa-cog\"></i></span>\r\n                        </div>\r\n                    </header>\r\n\r\n                    <main class=\"msger-chat\">\r\n                        <div class=\"msg left-msg\" *ngFor=\"let m of another\">\r\n                            <div class=\"msg-img\" style=\"background-image: url(https://image.flaticon.com/icons/svg/327/327779.svg)\"></div>\r\n\r\n                            <div class=\"msg-bubble\">\r\n                                <div class=\"msg-info\">\r\n                                    <div class=\"msg-info-name\">{{m.content.name}}</div>\r\n                                    <div class=\"msg-info-time\">{{m.content.currentTime}}</div>\r\n                                </div>\r\n\r\n                                <div class=\"msg-text\">\r\n                                    {{m.content.message}}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"msg right-msg\" *ngFor=\"let m of individualChat\">\r\n                            <div class=\"msg-img\" style=\"background-image: url(https://image.flaticon.com/icons/svg/145/145867.svg)\"></div>\r\n\r\n                            <div class=\"msg-bubble\">\r\n                                <div class=\"msg-info\">\r\n                                    <div class=\"msg-info-name\">{{m.content.name}}</div>\r\n                                    <div class=\"msg-info-time\">{{m.content.currentTime }}</div>\r\n                                    <!-- <div class=\"msg-info-time\">{{m.content.currentTime | date:'shortTime'}}</div> -->\r\n                                </div>\r\n\r\n                                <div class=\"msg-text\">\r\n                                    {{m.content.message}}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </main>\r\n\r\n                    <form class=\"msger-inputarea\" [formGroup]=\"chatForm\" (ngSubmit)=\"saveChanges()\" autocomplete=\"off\">\r\n                        <input type=\"text\" formControlName=\"message\" class=\"msger-input\" placeholder=\"Enter your message...\">\r\n                        <button type=\"submit\" class=\"msger-send-btn\">Send</button>\r\n                    </form>\r\n                </section>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>"],"sourceRoot":"webpack:///"}